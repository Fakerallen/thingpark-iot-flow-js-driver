var driver;(()=>{var e={};(()=>{var n=e;function r(e){var i=65535&e;return 32768&i&&(i=-(65536-i)),i}n.decodeUplink=function(e){var n={},o=e.bytes;if(o.length>8)throw new Error("Invalid uplink payload: length exceeds 8 bytes");for(i=0;i<o.length;i++)switch(o[i]){case 0:if(o.length<i+3)throw new Error("Invalid uplink payload: index out of bounds when reading temperature");t=r(t=o[i+1]<<8|o[i+2]),n.temp=t/100,i+=2;break;case 1:if(o.length<i+3)throw new Error("Invalid uplink payload: index out of bounds when reading humidity");var t;t=r(t=o[i+1]<<8|o[i+2]),n.humidity=t/100,i+=2;break;case 2:n.pulseCounter=o[i+1],i+=1;break;case 3:n.volumes=[];var a=r(o[i+1]);n.volumes.push({time:new Date("2020-08-02T20:00:00.000+05:00").toISOString(),volume:a});var u=r(o[i+2]);n.volumes.push({time:new Date("2020-08-02T21:00:00.000+05:00").toISOString(),volume:u}),i+=2;break;case 4:n.longitude=3.56*r(o[i+1]),n.latitude=12.56*r(o[i+2]),i+=2;break;default:throw new Error("Invalid uplink payload: unknown id '"+o[i]+"'")}return n},n.decodeDownlink=function(e){var n={},r=e.bytes;for(i=0;i<r.length;i+=2)switch(r[i]){case 0:if(r.length<i+2)throw new Error("Invalid downlink payload: index out of bounds when reading pulseCounterThreshold");n.pulseCounterThreshold=r[i+1];break;case 1:if(r.length<i+2)throw new Error("Invalid downlink payload: index out of bounds when reading alarm");n.alarm=1===r[i+1];break;default:throw new Error("Invalid downlink payload: unknown id '"+r[i]+"'")}return n},n.encodeDownlink=function(e){var i={},n=[];if(void 0!==e.pulseCounterThreshold){if(e.pulseCounterThreshold>255)throw new Error("Invalid downlink: pulseCounterThreshold cannot exceed 255");n.push(0),n.push(e.pulseCounterThreshold)}return void 0!==e.alarm&&(n.push(1),e.alarm?n.push(1):n.push(0)),i.bytes=n,i.fPort=16,i},n.extractPoints=function(e){var i={};void 0!==e.message.temp&&(i.temperature=e.message.temp),void 0!==e.message.humidity&&(i.humidity=e.message.humidity),void 0!==e.message.pulseCounter&&(i.pulseCounter=e.message.pulseCounter),void 0!==e.message.humidity&&(i.airHumidity=e.message.humidity);let n=e.message.volumes;return void 0!==n&&(i.volume=[],n.forEach((e=>{i.volume.push({eventTime:e.time,value:e.volume})}))),void 0!==e.message.longitude&&void 0!==e.message.latitude&&(i.location=[e.message.longitude,e.message.latitude]),i}})(),driver=e})();